{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Servidor de desafios Sobre Este servidor hospeda um sistema de desafios dedicado para os alunos do primeiro semestre de engenharia no Insper. Atrav\u00e9s desta aplica\u00e7\u00e3o \u00e9 poss\u00edvel criar novos desafios, com op\u00e7\u00e3o de data de entrega, para que possam ser resolvidos e enviados, podendo verificar se a resposta est\u00e1 correto ou se h\u00e1 algum erro. Exemplo de visualiza\u00e7\u00e3o Acima h\u00e1 um exemplo de desafio criado na plataforma com prazo e com envios que tiveram \u00eaxito e falha.","title":"Home"},{"location":"#servidor-de-desafios","text":"","title":"Servidor de desafios"},{"location":"#sobre","text":"Este servidor hospeda um sistema de desafios dedicado para os alunos do primeiro semestre de engenharia no Insper. Atrav\u00e9s desta aplica\u00e7\u00e3o \u00e9 poss\u00edvel criar novos desafios, com op\u00e7\u00e3o de data de entrega, para que possam ser resolvidos e enviados, podendo verificar se a resposta est\u00e1 correto ou se h\u00e1 algum erro.","title":"Sobre"},{"location":"#exemplo-de-visualizacao","text":"Acima h\u00e1 um exemplo de desafio criado na plataforma com prazo e com envios que tiveram \u00eaxito e falha.","title":"Exemplo de visualiza\u00e7\u00e3o"},{"location":"aluno/","text":"Guia do Aluno Atrav\u00e9s desta plataforma os alunos poder\u00e3o enviar e validar suas solu\u00e7\u00f5es para cada desafio criado. Login Para realizar o primeiro acesso na plataforma \u00e9 necess\u00e1rio utilizar o nome de usu\u00e1rio, fornecido pelo professor, como senha tamb\u00e9m. Em seguida, \u00e9 necess\u00e1rio clicar em \"trocar senha\", no canto superior esquerdo, para elaborar a troca de senha. Enviando a solu\u00e7\u00e3o Os desafios ativos se encontram a esquerda na p\u00e1gina. Para realizar o envio \u00e9 necess\u00e1rio clicar no desafio desejado e assim poder\u00e1 fazer o upload do c\u00f3digo em arquivo .py contendo a fun\u00e7\u00e3o com o nome do desafio. Caso de solu\u00e7\u00e3o errada No caso do c\u00f3digo falhar, haver\u00e1 uma mensagem \"Erro\" na coluna Resultado e o pr\u00f3prio erro na coluna Feedback . Caso de solu\u00e7\u00e3o errada No caso de \u00eaxito, haver\u00e1 uma mensagem \"OK!\" na coluna Resultado .","title":"Aluno"},{"location":"aluno/#guia-do-aluno","text":"Atrav\u00e9s desta plataforma os alunos poder\u00e3o enviar e validar suas solu\u00e7\u00f5es para cada desafio criado.","title":"Guia do Aluno"},{"location":"aluno/#login","text":"Para realizar o primeiro acesso na plataforma \u00e9 necess\u00e1rio utilizar o nome de usu\u00e1rio, fornecido pelo professor, como senha tamb\u00e9m. Em seguida, \u00e9 necess\u00e1rio clicar em \"trocar senha\", no canto superior esquerdo, para elaborar a troca de senha.","title":"Login"},{"location":"aluno/#enviando-a-solucao","text":"Os desafios ativos se encontram a esquerda na p\u00e1gina. Para realizar o envio \u00e9 necess\u00e1rio clicar no desafio desejado e assim poder\u00e1 fazer o upload do c\u00f3digo em arquivo .py contendo a fun\u00e7\u00e3o com o nome do desafio.","title":"Enviando a solu\u00e7\u00e3o"},{"location":"aluno/#caso-de-solucao-errada","text":"No caso do c\u00f3digo falhar, haver\u00e1 uma mensagem \"Erro\" na coluna Resultado e o pr\u00f3prio erro na coluna Feedback .","title":"Caso de solu\u00e7\u00e3o errada"},{"location":"aluno/#caso-de-solucao-errada_1","text":"No caso de \u00eaxito, haver\u00e1 uma mensagem \"OK!\" na coluna Resultado .","title":"Caso de solu\u00e7\u00e3o errada"},{"location":"config/","text":"Guia do Desenvolvimento Atrav\u00e9s desta plataforma os professores poder\u00e3o disponibilizar novos desafios para os alunos. Ambiente de desenvolvimento Primeiro \u00e9 necess\u00e1rio instalar as depend\u00eancias: pip3 install black pylint flask flask-httpauth Em seguida \u00e9 necess\u00e1rio criar o banco de dados: sqlite3 quiz.db < quiz.sql Ent\u00e3o criamos os usu\u00e1rios da aplica\u00e7\u00e3o atrav\u00e9s de um arquivo CSV: # Criar o usu\u00e1rio admin e o usu\u00e1rio username printf \"admin,0\\nusername,0\\n\" > users.csv && python3 adduser.py Para rodar a aplica\u00e7\u00e3o: python3 softdes.py Existem dois endpoints nesta aplica\u00e7\u00e3o, / e /pass . Ambos os endpoints requerem autentica\u00e7\u00e3o. \u00c9 necess\u00e1rio que o usu\u00e1rio esteja logado para ele possa ver qualquer conte\u00fado. A fun\u00e7\u00e3o respons\u00e1vel por receber e tratar todas as requisi\u00e7\u00f5es em / \u00e9 a fun\u00e7\u00e3o main . Ela aceita tanto requisi\u00e7\u00f5es GET quanto POST . Quando a requisi\u00e7\u00e3o de trata de um GET , ela retorna uma p\u00e1gina HTML contendo os desafios e os envios feitos pelo usu\u00e1rio e tamb\u00e9m possibilita que o usu\u00e1rio fa\u00e7a um novo envio. A interface de usu\u00e1rio para essa p\u00e1gina pode ser encontrada em templates/index.html . J\u00e1 quando a requisi\u00e7\u00e3o feita em / \u00e9 do tipo POST , ela significa o envio de uma solu\u00e7\u00e3o para um desafio. O desafio \u00e9 identificado pelo n\u00famero do desafio, que vem junto da requisi\u00e7\u00e3o, no par\u00e2metro ID . O c\u00f3digo enviado deve ser um arquivo .py . O c\u00f3digo \u00e9 verificado e o resultado \u00e9 enviado para o usu\u00e1rio.","title":"Configura\u00e7\u00e3o"},{"location":"config/#guia-do-desenvolvimento","text":"Atrav\u00e9s desta plataforma os professores poder\u00e3o disponibilizar novos desafios para os alunos.","title":"Guia do Desenvolvimento"},{"location":"config/#ambiente-de-desenvolvimento","text":"Primeiro \u00e9 necess\u00e1rio instalar as depend\u00eancias: pip3 install black pylint flask flask-httpauth Em seguida \u00e9 necess\u00e1rio criar o banco de dados: sqlite3 quiz.db < quiz.sql Ent\u00e3o criamos os usu\u00e1rios da aplica\u00e7\u00e3o atrav\u00e9s de um arquivo CSV: # Criar o usu\u00e1rio admin e o usu\u00e1rio username printf \"admin,0\\nusername,0\\n\" > users.csv && python3 adduser.py Para rodar a aplica\u00e7\u00e3o: python3 softdes.py Existem dois endpoints nesta aplica\u00e7\u00e3o, / e /pass . Ambos os endpoints requerem autentica\u00e7\u00e3o. \u00c9 necess\u00e1rio que o usu\u00e1rio esteja logado para ele possa ver qualquer conte\u00fado. A fun\u00e7\u00e3o respons\u00e1vel por receber e tratar todas as requisi\u00e7\u00f5es em / \u00e9 a fun\u00e7\u00e3o main . Ela aceita tanto requisi\u00e7\u00f5es GET quanto POST . Quando a requisi\u00e7\u00e3o de trata de um GET , ela retorna uma p\u00e1gina HTML contendo os desafios e os envios feitos pelo usu\u00e1rio e tamb\u00e9m possibilita que o usu\u00e1rio fa\u00e7a um novo envio. A interface de usu\u00e1rio para essa p\u00e1gina pode ser encontrada em templates/index.html . J\u00e1 quando a requisi\u00e7\u00e3o feita em / \u00e9 do tipo POST , ela significa o envio de uma solu\u00e7\u00e3o para um desafio. O desafio \u00e9 identificado pelo n\u00famero do desafio, que vem junto da requisi\u00e7\u00e3o, no par\u00e2metro ID . O c\u00f3digo enviado deve ser um arquivo .py . O c\u00f3digo \u00e9 verificado e o resultado \u00e9 enviado para o usu\u00e1rio.","title":"Ambiente de desenvolvimento"},{"location":"professor/","text":"Guia do Professor Atrav\u00e9s desta plataforma os professores poder\u00e3o disponibilizar novos desafios para os alunos. Adicionar usu\u00e1rios Para adicionar novos usu\u00e1rios \u00e9 necess\u00e1rio criar um novo arquivo users.csv que armazenar\u00e1 os registros em cada linha do arquivo da seguinte forma: nome,tipo Sendo: Nome: nome do usu\u00e1rio Tipo: tipo do usu\u00e1rio (admin, professor ou aluno) Em seguida \u00e9 necess\u00e1rio criar o banco de dados e atualiz\u00e1-lo atrav\u00e9s do comando: sqlite3 quiz.db < quiz.sql Para efetuar a integra\u00e7\u00e3o dos novos membros \u00e9 necess\u00e1rio rodar o comando: python adduser.py Adicionar desafios Para inserir um novo desafio \u00e9 necess\u00e1rio realizar de forma manual atrav\u00e9s do comando SQL em exemplo: Insert into QUIZ(numb, release, expire, problem, tests, results, diagnosis) values (1, '2018-08-01','2018-12-31 23:59:59','Exemplo de problema','[[1],[2],[3]]','[0, 0, 0]','[\"a\",\"b\",\"c\"]'); Sendo: numb: N\u00famero do quiz. release: Data de \u00ednicio no formato YYYY-MM-DD. expire: Data limite para envio no formato YYYY-MM-DD HH:MM:SS. problem: Descri\u00e7\u00e3o do desafio. tests: Testes a serem utilizados no formato de lista. results: Resultados esperados pelos testes no formato de lista. diagnosis: Feedback dos testes no formato de lista.","title":"Professor"},{"location":"professor/#guia-do-professor","text":"Atrav\u00e9s desta plataforma os professores poder\u00e3o disponibilizar novos desafios para os alunos.","title":"Guia do Professor"},{"location":"professor/#adicionar-usuarios","text":"Para adicionar novos usu\u00e1rios \u00e9 necess\u00e1rio criar um novo arquivo users.csv que armazenar\u00e1 os registros em cada linha do arquivo da seguinte forma: nome,tipo Sendo: Nome: nome do usu\u00e1rio Tipo: tipo do usu\u00e1rio (admin, professor ou aluno) Em seguida \u00e9 necess\u00e1rio criar o banco de dados e atualiz\u00e1-lo atrav\u00e9s do comando: sqlite3 quiz.db < quiz.sql Para efetuar a integra\u00e7\u00e3o dos novos membros \u00e9 necess\u00e1rio rodar o comando: python adduser.py","title":"Adicionar usu\u00e1rios"},{"location":"professor/#adicionar-desafios","text":"Para inserir um novo desafio \u00e9 necess\u00e1rio realizar de forma manual atrav\u00e9s do comando SQL em exemplo: Insert into QUIZ(numb, release, expire, problem, tests, results, diagnosis) values (1, '2018-08-01','2018-12-31 23:59:59','Exemplo de problema','[[1],[2],[3]]','[0, 0, 0]','[\"a\",\"b\",\"c\"]'); Sendo: numb: N\u00famero do quiz. release: Data de \u00ednicio no formato YYYY-MM-DD. expire: Data limite para envio no formato YYYY-MM-DD HH:MM:SS. problem: Descri\u00e7\u00e3o do desafio. tests: Testes a serem utilizados no formato de lista. results: Resultados esperados pelos testes no formato de lista. diagnosis: Feedback dos testes no formato de lista.","title":"Adicionar desafios"}]}